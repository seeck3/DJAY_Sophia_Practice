const express = require('express');
const connectDB = require('./config/db');
const passport = require('passport');
const flash = require('express-flash');
const session = require('express-session');
const cors = require('cors');
const app = express();
const swaggerUi = require('swagger-ui-express');
const swaggerJsdoc = require('swagger-jsdoc');

const options = {
  swaggerDefinition: {
    // Like the one described here: https://swagger.io/specification/#infoObject
    info: {
      title: 'Test API',
      version: '1.0.0',
      description: 'Test Express API with autogenerated swagger doc',
    },
  },
  // List of files to be processes. You can also set globs './routes/*.js'
  apis: ['./routes/*.js'],
};

const specs = swaggerJsdoc(options);

if (process.env.NODE_ENV !== 'production') {
  require('dotenv').config();
}

// Passport config
require('./config/passport')(passport);

// Connect MongoDB (database)
connectDB();
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));
app.use(cors());

// Init Middleware
app.use(express.json({ extended: false }));

// Passport middleware
app.use(flash());
app.use(
  session({
    secret: process.env.SESSION_SECRET,
    resave: false,
    saveUninitialized: true,
    // cookie: { secure: true },
  })
);
app.use(passport.initialize());
app.use(passport.session());

// Defines Routes
app.use('/api/board', require('./routes/boards'));
app.use('/api/auth', require('./routes/auth'));
app.use('/api/user', require('./routes/users'));

const PORT = process.env.PORT || 9999;

app.listen(PORT, () => {
  console.log(`Server is listening on port ${PORT}`);
});
